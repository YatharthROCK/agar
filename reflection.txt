I have described my project as well as its inspiration in the README files. What I did not describe there is the story of its making.

I tried building a cathedral, not once but twice. Unsurpsingly, it failed. I switched over to the Bazaar model of continuous integration and refactoring soon after.

I designed the player first, then the board, and finally the controller. OOP programming let me split the project into layers of abstraction which communicated top-down via method calls and bottom-up via exceptions.

Some bugs that took me longer to resolve than they should have were using radii for diameters, and naively converting diameters between co-ordinate systems instead of using the difference of converted points on the opposite sides of a circle.

I also had to deal with some bugs in the Python Processing implementation. One of them is that it didn't export projects into launchers properly if the project was split into multiple files. That's why there's an export file for bringing together all the code. In any case, you can run the appropriate launcher in the dist(ribution) folder.

I consulted the Processing reference often, but did not use anyone's code.

This was one of the longer projects I've worked on in a while, so I'm grateful for the chance to exercise my coding muscles in this class.